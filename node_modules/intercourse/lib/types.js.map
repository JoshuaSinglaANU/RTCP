{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS-PARSER/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_toplevel_entry',\n  tests:\n    \"? is an object\":                         ( x ) -> @isa.object  x\n    # \"? has key 'type'\":                       ( x ) -> @has_key     x, 'type'\n    \"?.type is a text\":                       ( x ) -> @isa.text    x.type\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_signature_entry',\n  tests:\n    \"? is an object\":                         ( x ) -> @isa.object        x\n    # \"? has key 'location'\":                   ( x ) -> @has_key           x, 'location'\n    # \"? has key 'kenning'\":                    ( x ) -> @has_key           x, 'kenning'\n    # \"? has key 'type'\":                       ( x ) -> @has_key           x, 'type'\n    \"?.location is a ic_location\":            ( x ) -> @isa.ic_location   x.location\n    \"?.kenning is a ic_kenning\":              ( x ) -> @isa.ic_kenning    x.kenning\n    \"?.type is a text\":                       ( x ) -> @isa.text          x.type\n    # \"? has key 'parts'\":                      ( x ) -> @has_key           x, 'parts'\n    \"?.parts is a nonempty list\":             ( x ) -> @isa.nonempty_list x.parts\n    # \"? has key 'signature'\":                  ( x ) -> @has_key           x, 'signature'\n    # \"?.signature is a list\":                  ( x ) -> @isa.list          x.signature\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_location',\n  tests:\n    \"? is an object\":                         ( x ) -> @isa.object    x\n    # \"? has key 'line_nr'\":                    ( x ) -> @has_key       x, 'line_nr'\n    \"?.line_nr is a positive\":                ( x ) -> @isa.positive  x.line_nr\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_settings',\n  tests:\n    \"? is an object\":                         ( x ) -> @isa.object    x\n    # \"? has key 'partition'\":                  ( x ) -> @has_key       x, 'partition'\n    # \"? has key 'comments'\":                   ( x ) -> @has_key       x, 'comments'\n    \"?.partition is null, false or 'indent'\": ( x ) -> x.partition in [ null, false, 'indent', ]\n    \"?.comments is a regex\":                  ( x ) -> @isa.regex     x.comments\n\n#-----------------------------------------------------------------------------------------------------------\nkenning_pattern = /// ^ null | \\( \\S* \\)  $ ///\n@declare 'ic_null_kenning',                   ( x ) -> x is 'null'\n@declare 'ic_kenning',                        ( x ) -> ( @isa.text x ) and ( x.match kenning_pattern )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'datom',\n  tests:\n    \"? is an object\":                         ( x ) -> @isa.object    x\n    # \"? has key 'key'\":                        ( x ) -> @has_key x, 'key'\n    # \"? has key 'value'\":                      ( x ) -> @has_key x, 'value'\n    \"?.$key is a nonempty text\":              ( x ) -> @isa.nonempty_text x.$key\n\n\n\n"
  ]
}