{
  "version": 3,
  "file": "TYPES.js",
  "sourceRoot": "..",
  "sources": [
    "src/TYPES.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n############################################################################################################\nlog                       = console.log\nrpr                       = ( x ) -> return ( require 'util' ).inspect x, false, 22\n#-----------------------------------------------------------------------------------------------------------\nnjs_util                  = require 'util'\njs_type_of                = ( x ) -> return Object::toString.call x\n#...........................................................................................................\n\n\n#===========================================================================================================\n# TYPE ELUCIDATION\n#-----------------------------------------------------------------------------------------------------------\n@_coffeenode_type_by_js_type =\n  '[object Array]':                     'list'\n  # '[object Boolean]':                   'boolean'\n  '[object Function]':                  'function'\n  # '[object Null]':                      'null'\n  '[object String]':                    'text'\n  #.........................................................................................................\n  '[object Generator]':                 'generator'\n  #.........................................................................................................\n  # '[object Undefined]':                 'jsundefined'\n  '[object Arguments]':                 'arguments'\n  '[object Date]':                      'date'\n  '[object Error]':                     'error'\n  '[object global]':                    'global'\n  '[object RegExp]':                    'regex'\n  '[object DOMWindow]':                 'window'\n  '[object CanvasRenderingContext2D]':  'canvasrenderingcontext2d'\n  '[object ArrayBuffer]':               'arraybuffer'\n  #.........................................................................................................\n  '[object Object]': ( x ) ->\n    return 'buffer' if Buffer.isBuffer x\n    return 'pod'\n  #.........................................................................................................\n  '[object Number]': ( x ) ->\n    ### TAINT isNaN is broken as per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN#Description ###\n    return 'nan' if isNaN x\n    # return 'jsinfinity'   if x == Infinity or x == -Infinity\n    return 'number'\n\n#-----------------------------------------------------------------------------------------------------------\n@type_of = ( x ) ->\n  \"\"\"Given any kind of value ``x``, return its type.\"\"\"\n  #.........................................................................................................\n  switch x\n    when null                       then return 'null'\n    when undefined                  then return 'undefined'\n    when true, false                then return 'boolean'\n    when -Infinity, Infinity        then return 'infinity'\n  #.........................................................................................................\n  R = x[ '~isa' ]\n  return R if R?\n  #.........................................................................................................\n  return 'buffer' if Buffer.isBuffer x\n  js_type = js_type_of x\n  R       = @_coffeenode_type_by_js_type[ js_type ]\n  return ( js_type.replace /^\\[object (.+)\\]$/, '$1' ).toLowerCase() unless R?\n  return if @isa_function R then R x else R\n\n#-----------------------------------------------------------------------------------------------------------\n@isa = ( x, probe ) ->\n  \"\"\"Given any value ``x`` and a non-empty text ``probe``, return whether ``TYPES/type_of x`` equals\n  ``probe``.\"\"\"\n  # validate_name probe\n  return ( @type_of x ) == probe\n\n\n#===========================================================================================================\n# TYPE TESTING\n#-----------------------------------------------------------------------------------------------------------\n# It is outright incredible, some would think frightening, how much manpower has gone into reliable\n# JavaScript type checking. Here is the latest and greatest for a language that can claim to be second\n# to none when it comes to things that should be easy but aren’t: the ‘Miller Device’ by Mark Miller of\n# Google (http://www.caplet.com), popularized by James Crockford of Yahoo!.*\n#\n# As per https://groups.google.com/d/msg/nodejs/P_RzSyPkjkI/NvP28SXvf24J, now also called the 'Flanagan\n# Device'\n#\n# http://ajaxian.com/archives/isarray-why-is-it-so-bloody-hard-to-get-right\n# http://blog.360.yahoo.com/blog-TBPekxc1dLNy5DOloPfzVvFIVOWMB0li?p=916 # page gone\n# http://zaa.ch/past/2009/1/31/the_miller_device_on_null_and_other_lowly_unvalues/ # moved to:\n# http://zaa.ch/post/918977126/the-miller-device-on-null-and-other-lowly-unvalues\n#...........................................................................................................\n@isa_list          = ( x ) -> return ( js_type_of x ) == '[object Array]'\n@isa_boolean       = ( x ) -> return ( js_type_of x ) == '[object Boolean]'\n@isa_function      = ( x ) -> return ( js_type_of x ) == '[object Function]'\n@isa_pod           = ( x ) -> return ( js_type_of x ) == '[object Object]' and not Buffer.isBuffer x\n@isa_text          = ( x ) -> return ( js_type_of x ) == '[object String]'\n@isa_number        = ( x ) -> return ( js_type_of x ) == '[object Number]' and isFinite x\n@isa_null          = ( x ) -> return x is null\n@isa_jsundefined   = ( x ) -> return x is undefined\n@isa_infinity      = ( x ) -> return x == Infinity or x == -Infinity\n#...........................................................................................................\n@isa_jsarguments   = ( x ) -> return ( js_type_of x ) == '[object Arguments]'\n### TAINT isNaN is broken as per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN#Description ###\n@isa_jsnotanumber  = ( x ) -> return isNaN x\n@isa_jsdate        = ( x ) -> return ( js_type_of x ) == '[object Date]'\n@isa_jsglobal      = ( x ) -> return ( js_type_of x ) == '[object global]'\n@isa_jsregex       = ( x ) -> return ( js_type_of x ) == '[object RegExp]'\n@isa_jserror       = ( x ) -> return ( js_type_of x ) == '[object Error]'\n@isa_jswindow      = ( x ) -> return ( js_type_of x ) == '[object DOMWindow]'\n@isa_jsctx         = ( x ) -> return ( js_type_of x ) == '[object CanvasRenderingContext2D]'\n@isa_jsarraybuffer = ( x ) -> return ( js_type_of x ) == '[object ArrayBuffer]'\n#...........................................................................................................\n# @isa_jsbuffer      = Buffer.isBuffer\n\n#-----------------------------------------------------------------------------------------------------------\n### https://github.com/blakeembrey/is-generator/blob/master/is-generator.js ###\n@isa_generator           = ( x ) -> x? and ( typeof x.next is 'function' ) and ( typeof x.throw is 'function' )\n@isa_generator_function  = ( x ) -> ( typeof x is 'function' ) and ( x.constructor.name == 'GeneratorFunction' )\n\n#-----------------------------------------------------------------------------------------------------------\n# Replace some of our ``isa_*`` methods by the ≈6× faster methods provided by NodeJS ≥ 0.6.0, where\n# available:\n@isa_list       = Array.isArray\n@isa_buffer     = Buffer.isBuffer\n# @isa_jsregex          = njs_util.isRegExp           if njs_util.isRegExp?\n# @isa_jsdate           = njs_util.isDate             if njs_util.isDate?\n# @isa_boolean          = njs_util.isBoolean          if njs_util.isBoolean?\n# @isa_jserror          = njs_util.isError            if njs_util.isError?\n# @isa_function         = njs_util.isFunction         if njs_util.isFunction?\n# @isa_primitive        = njs_util.isPrimitive        if njs_util.isPrimitive?\n# @isa_text             = njs_util.isString           if njs_util.isString?\n# @isa_jsundefined      = njs_util.isUndefined        if njs_util.isUndefined?\n# @isa_null             = njs_util.isNull             if njs_util.isNull?\n# @isa_nullorundefined  = njs_util.isNullOrUndefined  if njs_util.isNullOrUndefined?\n# @isa_number           = njs_util.isNumber           if njs_util.isNumber?\n# @isa_object           = njs_util.isObject           if njs_util.isObject?\n# @isa_symbol           = njs_util.isSymbol           if njs_util.isSymbol?\n\n\n#===========================================================================================================\n# TYPE FEATURES\n#-----------------------------------------------------------------------------------------------------------\n# these await further elaboration\n\n# @is_mutable          = ( x ) -> return type_features[ @type_of x ][ 'mutable'        ] is true\n# @is_indexed          = ( x ) -> return type_features[ @type_of x ][ 'indexed'        ] is true\n# @is_facetted         = ( x ) -> return type_features[ @type_of x ][ 'facetted'       ] is true\n# @is_ordered          = ( x ) -> return type_features[ @type_of x ][ 'ordered'        ] is true\n# @is_repetitive       = ( x ) -> return type_features[ @type_of x ][ 'repetitive'     ] is true\n# @is_single_valued    = ( x ) -> return type_features[ @type_of x ][ 'single_valued'  ] is true\n# @is_dense            = ( x ) -> return type_features[ @type_of x ][ 'dense'          ] is true\n# @is_callable         = ( x ) -> return type_features[ @type_of x ][ 'callable'       ] is true\n# @is_numeric          = ( x ) -> return type_features[ @type_of x ][ 'numeric'        ] is true\n# @is_basic            = ( x ) -> return type_features[ @type_of x ][ 'basic'          ] is true\n# @is_ecma             = ( x ) -> return type_features[ @type_of x ][ 'ecma'           ] is true\n# @is_covered_by_json  = ( x ) -> return type_features[ @type_of x ][ 'json'           ] is true\n\n\n#===========================================================================================================\n# HELPERS\n#-----------------------------------------------------------------------------------------------------------\n# vaq = validate_argument_count_equals = ( count ) ->\n#   a = arguments.callee.caller.arguments\n#   unless a.length == count then throw new Error \"expected #{count} arguments, got #{a.length}\"\n\n# #-----------------------------------------------------------------------------------------------------------\n# validate_name = ( x ) ->\n#   unless @isa_text x   then throw new Error \"expected a text, got a #{@type_of x}\"\n#   unless x.length > 0   then throw new Error \"expected a non-empty text, got an empty one\"\n\n#-----------------------------------------------------------------------------------------------------------\n# This registry lists all types that can be meaningfully compared using JS's ``===`` / CS's ``==`` strict\n# equality operator; conspicuously absent here are lists and PODs, for which the Δ method ``equals`` should\n# be used instead:\n@simple_equality_types =\n  'number':       true\n  'infinity':     true\n  'text':         true\n  'boolean':      true\n  'null':         true\n  'jsundefined':  true\n\n#-----------------------------------------------------------------------------------------------------------\n# This registry lists all types that can be meaningfully compared using `<` and `>`:\n@simple_comparison_types =\n  'number':       true\n  'infinity':     true\n  'text':         true\n  'boolean':      true\n  'null':         true\n  # 'jsundefined':  true\n\n\n#-----------------------------------------------------------------------------------------------------------\n# 'ISA' VALIDATION\n#...........................................................................................................\n@validate_isa = ( x, types... ) ->\n  throw new Error \"expected one or more types, got none\" if types.length == 0\n  #.........................................................................................................\n  probe_type  = @type_of x\n  for type in types\n    return null if type is probe_type\n  #.........................................................................................................\n  if types.length == 1\n    message = \"expected a #{types[ 0 ]}, got a #{probe_type}\"\n  else\n    types   = types.join ', '\n    message = \"expected value to have one of these types: #{types}, got a #{probe_type}\"\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndo =>\n  for name of @\n    match = name.match /^isa_(.+)/\n    continue unless match?\n    type  = match[ 1 ]\n    #.......................................................................................................\n    do ( name, type ) =>\n      @[ \"validate_#{name}\" ] = ( x ) ->\n        return null if @[ name ] x\n        throw new Error \"expected a #{type}, got a #{@type_of x}\"\n\n#-----------------------------------------------------------------------------------------------------------\n# TAG VALIDATION\n#...........................................................................................................\n# do ->\n#   for name of TYPES\n#     continue unless name.match /^is_/\n#     do ( name ) ->\n#       $[ \"validate_#{name}\" ] = ( x ) ->\n#         return null if TYPES[ name ] x\n#         throw new Error \"expected a x, got a #{TYPES.type_of x}\"\n"
  ]
}