
'use strict'

#-----------------------------------------------------------------------------------------------------------
freeze = ( x ) ->
  try
    return _copy x
  catch error
    if error.name is 'RangeError' and error.message is 'Maximum call stack size exceeded'
      throw new Error "Âµ45666 unable to freeze circular objects"
    throw error

#-----------------------------------------------------------------------------------------------------------
thaw = ( x ) -> x

#-----------------------------------------------------------------------------------------------------------
_copy = ( x ) ->
  #.........................................................................................................
  if Array.isArray x
    return ( ( _copy value ) for value in x )
  #.........................................................................................................
  if typeof x is 'object'
    R = {}
    R[ key ] = _copy value for key, value of x
    return R
  #.........................................................................................................
  return x

#-----------------------------------------------------------------------------------------------------------
lets = ( original, modifier ) ->
  draft = _copy original
  modifier draft if modifier?
  return draft

#-----------------------------------------------------------------------------------------------------------
fix = ( target, name, value ) ->
  target[ name ] = value
  return target

#-----------------------------------------------------------------------------------------------------------
module.exports = { lets, freeze, thaw, _copy, fix, }

