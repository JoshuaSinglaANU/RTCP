{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/sources.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/SOURCES'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ jr }                    = CND\nassign                    = Object.assign\n#...........................................................................................................\n{ isa\n  validate\n  defaults\n  type_of }               = require './types'\n\n#-----------------------------------------------------------------------------------------------------------\n@new_value_source = ( x ) -> yield from x\n\n#-----------------------------------------------------------------------------------------------------------\n@new_push_source = ->\n  send = ( d ) =>\n    return R.buffer.push d unless R.duct?\n    R.buffer = null\n    return end() if d is @signals.end\n    R.duct.buckets[ 0 ].push d\n    R.duct.exhaust_pipeline()\n    return null\n  end = =>\n    R.has_ended = true\n    return unless R.duct? ### NOTE: ensuring that multiple calls to `end()` will be OK ###\n    R.duct.buckets[ 0 ].push @signals.last\n    R.duct.exhaust_pipeline()\n    drain = R.duct.transforms[ R.duct.transforms.length - 1 ]\n    if ( on_end = drain.on_end )?\n      if drain.call_with_datoms then drain.on_end drain.sink else drain.on_end()\n    return R.duct = null\n  R = { [@marks.isa_pusher], send, end, buffer: [], duct: null, has_ended: false, }\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@new_wye = ( settings, source ) ->\n  switch arity = arguments.length\n    when 1 then [ settings, source, ] = [ null, settings, ]\n    when 2 then null\n    else throw new Error \"Âµ44578 expected 1 or 2 arguments, got #{arity}\"\n  settings = { defaults.steampipes_new_wye_settings..., settings..., }\n  validate.steampipes_new_wye_settings settings\n  return { [@marks.isa_wye], settings, source, }\n\n#-----------------------------------------------------------------------------------------------------------\n@source_from_child_process = ( cp, settings ) ->\n  JFEE = require 'jfee'\n  ### TAINT should wait until pipeline pulled? ###\n  for await x from JFEE.Receiver.from_child_process cp, settings\n    yield x\n  return null\n\n### TAINT we should use this implementation but fails in hengist/dev/steampipes/src/nodejs-eventemitter-as-stream-source.coffee\n#-----------------------------------------------------------------------------------------------------------\n@source_from_child_process_2 = ( cp, settings ) ->\n  JFEE = require 'jfee'\n  R = @new_push_source()\n  R.start = ->\n    setImmediate =>\n      for await x from JFEE.Receiver.from_child_process cp, settings\n        R.send x\n      R.end()\n    return null\n  return R\n###\n\n#-----------------------------------------------------------------------------------------------------------\n@source_from_readstream = ( readstream, settings ) ->\n  JFEE = require 'jfee'\n  R = @new_push_source()\n  R.start = ->\n    setImmediate =>\n      for await x from JFEE.Receiver.from_readstream readstream, settings\n        R.send x\n      R.end()\n    return null\n  return R\n\n\n\n\n"
  ]
}