{
  "version": 3,
  "file": "modify.js",
  "sourceRoot": "..",
  "sources": [
    "src/modify.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/MODIFY'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n{ jr }                    = CND\nassign                    = Object.assign\n#...........................................................................................................\n{ isa\n  validate\n  type_of }               = require './types'\nmisfit                    = Symbol 'misfit'\n\n\n#-----------------------------------------------------------------------------------------------------------\nremit_defaults = Object.freeze\n  first:    misfit\n  last:     misfit\n  between:  misfit\n  after:    misfit\n  before:   misfit\n\n#-----------------------------------------------------------------------------------------------------------\n@_get_remit_settings = ( settings ) ->\n  validate.function settings.leapfrog if settings.leapfrog?\n  settings._surround = \\\n    ( settings.first    isnt misfit ) or \\\n    ( settings.last     isnt misfit ) or \\\n    ( settings.between  isnt misfit ) or \\\n    ( settings.after    isnt misfit ) or \\\n    ( settings.before   isnt misfit )\n  #.........................................................................................................\n  return settings\n\n#-----------------------------------------------------------------------------------------------------------\n@modify = ( modifications..., transform ) ->\n  ### Can always call `modify $ ( d, send ) -> ...` with no effect: ###\n  return transform if modifications.length is 0\n  #.........................................................................................................\n  settings              = @_get_remit_settings Object.assign {}, remit_defaults, modifications...\n  self                  = null\n  do_leapfrog           = settings.leapfrog\n  data_first            = settings.first\n  data_before           = settings.before\n  data_between          = settings.between\n  data_after            = settings.after\n  data_last             = settings.last\n  send_first            = data_first    isnt misfit\n  send_before           = data_before   isnt misfit\n  send_between          = data_between  isnt misfit\n  send_after            = data_after    isnt misfit\n  send_last             = data_last     isnt misfit\n  is_first              = true\n  #.........................................................................................................\n  ### slow track with surround features ###\n  R = ( d, send ) =>\n    has_returned  = false\n    #.......................................................................................................\n    if send_last and d is @signals.last\n      transform data_last, send\n    #.......................................................................................................\n    else\n      if is_first then ( ( transform data_first,   send ) if send_first   )\n      else             ( ( transform data_between, send ) if send_between )\n      ( transform data_before, send ) if send_before\n      is_first = false\n      #.....................................................................................................\n      # When leapfrogging is being called for, only call transform if the jumper returns false:\n      if ( not do_leapfrog ) or ( not settings.leapfrog d ) then  transform d, send\n      else                                                        send d\n      #.....................................................................................................\n      ( transform data_after, send ) if send_after\n    has_returned = true\n    return null\n  #.........................................................................................................\n  R.sink = transform.sink\n  R.send = transform.send\n  delete transform.sink\n  delete transform.send\n  R[ @marks.send_last ] = @marks.send_last if send_last\n  return R\n\n"
  ]
}