{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/main.coffee"
  ],
  "names": [],
  "mappings": ";AAE4G;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA;;EAC5G,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAZgF;;;EAc5G,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,UAAR,EAhBgF;;;EAqB5G,CAAA,GAAI;;EACD,CAAA,QAAA,CAAA,CAAA;AACH,QAAA,QAAA,EAAA,SAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,EAAA;IAAE,SAAA,GAAY,EAAE,CAAC,WAAH,CAAe,SAAf;IACZ,KAAA,2CAAA;;MACE,KAAgB,QAAQ,CAAC,QAAT,CAAkB,UAAlB,CAAhB;AAAA,iBAAA;;MACA,IAAY,QAAQ,CAAC,UAAT,CAAoB,GAApB,CAAZ;AAAA,iBAAA;;MACA,IAAA,GAAO,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,QAArB;MACP,MAAA,GAAS,OAAA,CAAQ,IAAR;MACT,KAAA,aAAA;;QACE,IAAY,GAAG,CAAC,UAAJ,CAAe,GAAf,CAAZ;AAAA,mBAAA;;QACA,IAA8C,cAA9C;UAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,cAAA,CAAA,CAAiB,GAAA,CAAI,GAAJ,CAAjB,CAAA,CAAV,EAAN;;QACA,CAAC,CAAE,GAAF,CAAD,GAAW,KAAK,CAAC,IAAN,CAAW,CAAX;MAHb;IALF;WASA,IAAA,CAAK,CAAL,EAAQ;MAAE,OAAA,EAAS;IAAX,CAAR;EAXC,CAAA;AAtByG",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/TESTS/MAIN'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\ntest                      = require 'guy-test'\n\n\n\n############################################################################################################\nL = @\ndo ->\n  filenames = FS.readdirSync __dirname\n  for filename in filenames\n    continue unless filename.endsWith '.test.js'\n    continue if filename.startsWith '_'\n    path = PATH.join __dirname, filename\n    module = require path\n    for key, value of module\n      continue if key.startsWith '_'\n      throw new Error \"duplicate key #{rpr key}\" if L[ key ]?\n      L[ key ] = value.bind L\n  test L, { timeout: 5000, }\n\n"
  ]
}