{
  "version": 3,
  "file": "pipestreams-adapter.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/pipestreams-adapter.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/TESTS/PIPESTREAM-ADAPTER'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n{ jr }                    = CND\n#...........................................................................................................\nSP                        = require '../..'\n{ $\n  $async\n  $watch\n  $show  }                = SP.export()\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"adapt 1\" ] = ( T, done ) ->\n  try PD = require 'pipedreams' catch error\n    throw error unless error.code is 'MODULE_NOT_FOUND'\n    message = \"^33877^ must install pipedreams to run adapter test; skipping\"\n    warn message\n    # T.fail message\n    return done()\n  probe   = \"just a bunch of words really\".split /\\s+/\n  matcher = [ probe..., ]\n  error   = null\n  await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n    R           = []\n    source      = probe\n    pipeline    = []\n    #.......................................................................................................\n    pipeline.push source\n    pipeline.push SP.$watch ( d ) -> info jr d\n    pipeline.push SP.adapt_ps_transform PD.$collect { collector: R, }\n    pipeline.push SP.$drain -> help 'ok'; resolve R\n    SP.pull pipeline...\n    return null\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  test @, 'timeout': 30000\n"
  ]
}