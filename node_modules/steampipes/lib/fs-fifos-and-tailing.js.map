{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/fs-fifos-and-tailing.coffee"
  ],
  "names": [],
  "mappings": "AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA,QAAA,EAAA,IAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR,EAR5B;;;;;EAYA,KAAA,GAA4B;;EAC5B,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B;;EACA,KAAA,GAA4B,OAAA,CAAQ,SAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,KAF5B,EAfA;;;EAqBA,IAAC,CAAA,oBAAD,GAAwB,QAAA,CAAE,IAAF,CAAA;AACxB,QAAA,GAAA,EAAA,CAAA,EAAA,EAAA,EAAA,KAAA,EAAA;IAAE,MAAM,IAAI,KAAJ,CAAU,wDAAV,EAAR;;IAEE,QAAQ,CAAC,aAAT,CAAuB,IAAvB;IACA,EAAA,GAAU,OAAA,CAAQ,IAAR;IACV,GAAA,GAAU,OAAA,CAAQ,KAAR;IACV,CAAA,GAAU,IAAC,CAAA,eAAD,CAAA;IACV,KAAA,GAAU,EAAE,CAAC,SAAS,CAAC,QAAb,GAAwB,EAAE,CAAC,SAAS,CAAC;IAC/C,EAAA,GAAU,EAAE,CAAC,QAAH,CAAY,IAAZ,EAAkB,KAAlB;IACV,IAAA,GAAU,IAAI,GAAG,CAAC,MAAR,CAAe;MAAE,EAAF;MAAM,QAAA,EAAU;IAAhB,CAAf;IACV,IAAI,CAAC,UAAL,CAAgB,IAAhB;IACA,IAAI,CAAC,EAAL,CAAQ,MAAR,EAAgB,CAAE,IAAF,CAAA,GAAA;MAAe,KAAA,CAAM,WAAN,EAAmB,IAAI,CAAC,SAAxB,EAAmC,IAAnC;aAAyC,CAAC,CAAC,IAAF,CAAO,IAAP;IAAxD,CAAhB;IACA,IAAI,CAAC,EAAL,CAAQ,KAAR,EAA4B,CAAA,CAAA,GAAA;MAAG,KAAA,CAAM,QAAN,EAAgB,CAAA,OAAA,CAAA,CAAU,IAAV,CAAA,CAAhB;aAAkC,CAAC,CAAC,GAAF,CAAA;IAArC,CAA5B,EAXF;;IAaE,IAAI,CAAC,EAAL,CAAQ,OAAR,EAAiB,CAAE,KAAF,CAAA,GAAA;MAAc,MAAM;IAApB,CAAjB;AACA,WAAO;EAfe,EArBxB;;;EAuCA,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAA,CAAA;AACpB,QAAA,CAAA,EAAA;IAAE,CAAA,GAAgB,IAAC,CAAA,eAAD,CAAA;IAChB,YAAA,GAAgB,OAAO,CAAC;IACxB,YAAY,CAAC,EAAb,CAAgB,MAAhB,EAAwB,CAAE,IAAF,CAAA,GAAA;aAAY,CAAC,CAAC,IAAF,CAAO,IAAP;IAAZ,CAAxB;IACA,YAAY,CAAC,EAAb,CAAgB,OAAhB,EAAyB,CAAA,CAAA,GAAA;aAAG,CAAC,CAAC,GAAF,CAAA;IAAH,CAAzB;AACA,WAAO;EALW;AAvCpB",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nbadge                     = 'STEAMPIPES/NJS-STREAMS-AND-FILES'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nFS                        = require 'fs'\n# TO_PULL_STREAM            = require 'stream-to-pull-stream'\n# TO_NODE_STREAM            = require '../deps/pull-stream-to-stream-patched'\n# TO_NODE_STREAM            = require 'pull-stream-to-stream'\ndefer                     = setImmediate\n{ jr }                    = CND\ntypes                     = require './types'\n{ isa\n  validate\n  type_of }               = types\n\n\n#-----------------------------------------------------------------------------------------------------------\n@new_unix_fifo_source = ( path ) ->\n  throw new Error \"^344^ currently not usable because of buffering issues\"\n  # thx to https://stackoverflow.com/a/52622889/7568091\n  validate.nonempty_text path\n  FS      = require 'fs'\n  NET     = require 'net'\n  R       = @new_push_source()\n  flags   = FS.constants.O_RDONLY | FS.constants.O_NONBLOCK\n  fd      = FS.openSync path, flags\n  pipe    = new NET.Socket { fd, readable: true, }\n  pipe.setNoDelay true\n  pipe.on 'data', ( data )    => debug '^6556576^', pipe.bytesRead, data; R.send data\n  pipe.on 'end',              => debug '^3338^', \"ended: #{path}\"; R.end()\n  # pipe.on 'close',            => debug '^3338^', \"closed: #{path}\"; R.end()\n  pipe.on 'error', ( error )  => throw error\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@new_stdin_source = ->\n  R             = @new_push_source()\n  input_stream  = process.stdin\n  input_stream.on 'data', ( data ) => R.send data\n  input_stream.on 'close', => R.end()\n  return R\n\n\n\n\n"
  ]
}