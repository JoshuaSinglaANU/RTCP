{
  "version": 3,
  "file": "tsv.test.js",
  "sourceRoot": "../../..",
  "sources": [
    "src/experiments/tests/tsv.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'STEAMPIPES/TESTS/TSV'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\n#...........................................................................................................\nSP                        = require '../..'\n{ $, $async, }            = SP\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"TSV 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"foo\\tbar\",[['foo','bar']],null]\n    [\" foo \\t bar \",[['foo','bar']],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      R         = []\n      pipeline  = []\n      pipeline.push SP.new_value_source probe\n      # pipeline.push SP.$split()\n      pipeline.push SP.$split_tsv()\n      pipeline.push SP.$collect { collector: R, }\n      pipeline.push SP.$show()\n      pipeline.push SP.$drain -> resolve R\n      SP.pull pipeline...\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"WSV 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"foo bar\",[['foo','bar']],null]\n    [\" foo   bar \",[[null,'foo','bar']],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      R         = []\n      pipeline  = []\n      pipeline.push SP.new_value_source probe\n      pipeline.push SP.$split()\n      pipeline.push SP.$split_wsv()\n      pipeline.push SP.$collect { collector: R, }\n      pipeline.push SP.$show()\n      pipeline.push SP.$drain -> resolve R\n      SP.pull pipeline...\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"WSV 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[\"foo bar baz another field\",null],[[\"foo\",\"bar\",\"baz\",\"another\",\"field\"]],null]\n    [[\"foo bar baz another field\",1],[['foo bar baz another field']],null]\n    [[\" foo bar baz another field\",6],[[null,'foo','bar','baz', 'another', 'field']],null]\n    [[\"foo\",2],[['foo',null]],null]\n    [[\"foo\",null],[['foo']],null]\n    [[\" foo bar baz another field\",null],[[null,'foo','bar','baz', 'another', 'field']],null]\n    [[\"foo  \",2],[['foo',null]],null]\n    [[\"foo  \",3],[['foo',null,null]],null]\n    [[\"foo  \",null],[['foo']],null]\n    [[\"foo bar baz another field\",null],[['foo','bar','baz', 'another', 'field']],null]\n\n    [[\"foo bar baz another field\",2],[['foo','bar baz another field']],null]\n    [[\"foo bar baz another field\",3],[['foo','bar','baz another field']],null]\n    [[\"foo bar baz another field\",4],[['foo','bar','baz', 'another field']],null]\n    [[\"foo bar baz another field\",5],[['foo','bar','baz', 'another', 'field']],null]\n    [[\"foo bar baz another field\",6],[['foo','bar','baz', 'another', 'field',null]],null]\n    [[\"foo bar baz another field\",7],[['foo','bar','baz', 'another', 'field',null,null]],null]\n\n    [[\"⺮ ⺮ [zhu2] /\\\"bamboo\\\" radical in Chinese characters (Kangxi radical 118)/\\r\",4],[[\"⺮\",\"⺮\",\"[zhu2]\",\"/\\\"bamboo\\\" radical in Chinese characters (Kangxi radical 118)/\"]],null]\n    [[\"% % [pa1] /percent (Tw)/\\r\",4],[[\"%\",\"%\",\"[pa1]\",\"/percent (Tw)/\"]],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      [ text, field_count, ]  = probe\n      R                       = []\n      pipeline                = []\n      pipeline.push SP.new_value_source [ text, ]\n      # pipeline.push SP.$split()\n      pipeline.push SP.$split_wsv field_count\n      pipeline.push SP.$show title: 'µ45456'\n      pipeline.push SP.$collect { collector: R, }\n      pipeline.push SP.$drain -> resolve R\n      SP.pull pipeline...\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"name_fields\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[42,108],[['foo','bar']]],[{foo:42,bar:108,}],null]\n    [[[42,108],['foo','bar']],[{foo:42,bar:108,}],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, => new Promise ( resolve, reject ) =>\n      [ values, names, ]  = probe\n      debug 'µ33443', probe\n      debug 'µ33443', values\n      debug 'µ33443', names\n      R                   = []\n      pipeline            = []\n      pipeline.push SP.new_value_source [ values, ]\n      pipeline.push SP.$show()\n      pipeline.push SP.$name_fields names...\n      pipeline.push SP.$collect { collector: R, }\n      pipeline.push SP.$drain -> resolve R\n      SP.pull pipeline...\n      return null\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  # test @\n  # test @[ \"TSV 1\" ]\n  # test @[ \"WSV 1\" ]\n  # test @[ \"WSV 2\" ]\n  test @[ \"name_fields\" ]\n\n\n\n"
  ]
}