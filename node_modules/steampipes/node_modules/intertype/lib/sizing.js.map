{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/sizing.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,MAAA,EAAA,EAAA,EAAA,UAAA,EAAA,IAAA;;;EAGA,CAAA,CAAE,MAAF,EACE,EADF,EAEE,IAFF,EAGE,UAHF,CAAA,GAG4B,OAAA,CAAQ,WAAR,CAH5B,EAHA;;;;;EAYA,IAAC,CAAA,wBAAD,GAA4B,QAAA,CAAE,IAAF,EAAQ,IAAR,CAAA;WACvB,CAAA,CAAE,CAAF,CAAA,GAAA;AACL,UAAA;MAAI,IAAmB,SAAnB;AAAA,eAAO,KAAP;;AACA,cAAO,CAAA,GAAI,UAAA,CAAW,CAAX,CAAX;AAAA,aACO,QADP;AACuB,iBAAO,QAAA,CAAE,CAAF,CAAA;mBAAS,CAAC,CAAE,CAAF;UAAV;AAD9B,aAEO,UAFP;AAEuB,iBAAO,CAAkB;AAFhD,aAGO,QAHP;AAGuB,iBAAO,QAAA,CAAA,CAAA;mBAAG,CAAe;UAAlB;AAH9B;MAIA,MAAM,IAAI,KAAJ,CAAU,CAAA,uDAAA,CAAA,CAA0D,IAA1D,CAAA,QAAA,CAAA,CAAyE,CAAzE,CAAA,CAAV;IANL,CAAA,EAAM,IAAI,CAAC;EADY,EAZ5B;;;EAsBA,IAAC,CAAA,OAAD,GAAW,QAAA,CAAE,CAAF,EAAA,GAAK,CAAL,CAAA,EAAA;;;;;AACX,QAAA,MAAA,EAAA,GAAA,EAAA;IAIE,IAAA,GAAO,IAAC,CAAA,OAAD,CAAS,CAAT;IACP,KAAO,CAAE,IAAC,CAAA,GAAG,CAAC,QAAL,CAAc,CAAE,MAAA,yCAAuB,CAAE,aAA3B,CAAd,CAAF,CAAP;MACE,MAAM,IAAI,KAAJ,CAAU,CAAA,+BAAA,CAAA,CAAkC,IAAlC,CAAA,CAAV,EADR;;AAEA,WAAO,MAAA,CAAO,CAAP,EAAU,GAAA,CAAV;EARE,EAtBX;;;;;;;;EAsCA,IAAC,CAAA,QAAD,GAAc,QAAA,CAAE,UAAF,CAAA;WAAkB,UAAU,CAAE,CAAF;EAA5B;;EACd,IAAC,CAAA,OAAD,GAAc,QAAA,CAAE,UAAF,CAAA;WAAkB,UAAU,CAAE,UAAU,CAAC,MAAX,GAAoB,CAAtB;EAA5B,EAvCd;;;EA0CA,IAAC,CAAA,QAAD,GAAY,QAAA,CAAE,CAAF,CAAA;AACZ,QAAA;IAAE,IAAO,CAAE,IAAA,GAAO,IAAC,CAAA,YAAD,CAAc,CAAd,CAAT,CAAA,KAA8B,UAArC;MACE,MAAM,IAAI,KAAJ,CAAU,CAAA,kCAAA,CAAA,CAAqC,IAArC,CAAA,CAAV,EADR;;AAEA,WAAO,CAAC,CAAC;EAHC,EA1CZ;;;EAgDA,IAAC,CAAA,QAAD,GAAY,QAAA,CAAE,CAAF,CAAA;AAAQ,QAAA;WAAC,IAAC,CAAA,GAAG,CAAC,QAAL,kDAAkC,CAAE,aAApC;EAAT;AAhDZ",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\n{ assign\n  jr\n  xrpr\n  js_type_of }            = require './helpers'\n\n\n#===========================================================================================================\n# OBJECT SIZES\n#-----------------------------------------------------------------------------------------------------------\n@_sizeof_method_from_spec = ( type, spec ) ->\n  do ( s = spec.size ) =>\n    return null unless s?\n    switch T = js_type_of s\n      when 'string'   then return ( x ) -> x[ s ]   ### TAINT allows empty strings ###\n      when 'function' then return s                 ### TAINT disallows async funtions ###\n      when 'number'   then return -> s              ### TAINT allows NaN, Infinity ###\n    throw new Error \"µ30988 expected null, a text or a function for size of #{type}, got a #{T}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@size_of = ( x, P... ) ->\n  ### The `size_of()` method uses a per-type configurable methodology to return the size of a given value;\n  such methodology may permit or necessitate passing additional arguments (such as `size_of text`, which\n  comes in several flavors depending on whether bytes or codepoints are to be counted). As such, it is a\n  model for how to implement Go-like method dispatching. ###\n  type = @type_of x\n  unless ( @isa.function ( getter = @specs[ type ]?.size ) )\n    throw new Error \"µ88793 unable to get size of a #{type}\"\n  return getter x, P...\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT faulty implementation:\n  * does not use size_of but length\n  * does not accept additional arguments as needed for texts\n  * risks to break codepoints apart\n  ###\n@first_of   = ( collection ) -> collection[ 0 ]\n@last_of    = ( collection ) -> collection[ collection.length - 1 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@arity_of = ( x ) ->\n  unless ( type = @supertype_of x ) is 'callable'\n    throw new Error \"µ88733 expected a callable, got a #{type}\"\n  return x.length\n\n#-----------------------------------------------------------------------------------------------------------\n@has_size = ( x ) -> @isa.function @specs[ @type_of x ]?.size\n\n\n"
  ]
}