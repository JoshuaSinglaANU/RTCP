{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "AAIA;EAAA;AAAA,MAAA,GAAA,EAAA,QAAA,EAAA,IAAA,EAAA,QAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,eAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;IAAA,kBAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,GAAb;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAd5B;;;EAgBA,IAAC,CAAA,KAAD,GAA4B,IAAI,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC,SAA5B,CAAA;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,CAAA,GAE4B,IAAC,CAAA,KAAK,CAAC,MAAP,CAAA,CAF5B,EAjBA;;;EAqBA,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B;;EACA,QAAA,GAA4B,OAAA,CAAQ,UAAR,EAtB5B;;;EAyBA,eAAA,GAAkB,QAAA,CAAE,IAAF,CAAA;AAChB,WAAO,IAAI,CAAC,MAAL,CAAY,QAAA,CAAE,CAAF,CAAA;aAAS;IAAT,CAAZ;EADS,EAzBlB;;;;;AA0BiC,0BAIjC,IAAA,GAAO;;EACD;IAAN,MAAA,SAAA,QAAuB,SAAvB,CAAA;;MAME,WAAa,CAAE,WAAW,IAAb,CAAA;aACX,CAAA;QACA,IAAC,CAAA,QAAD,GAAkB,CAAE,GAAA,IAAC,CAAA,SAAH,EAAiB,GAAA,QAAjB;QAClB,IAAC,CAAA,QAAD,GAAkB;QAClB,IAAC,CAAA,KAAD,CAAA;AACA,eAAO;MALI,CALf;;;MAaE,MAAQ,CAAA,CAAA;AACV,YAAA;QAAI,IAA0C,IAAC,CAAA,QAAQ,CAAC,OAApD;UAAA,IAAC,CAAA,SAAD,GAAc,IAAC,CAAA,SAAS,CAAC,IAAX,CAAgB,KAAhB,EAAd;;QACA,CAAA,GAAc,IAAC,CAAA;QACf,IAAC,CAAA,KAAD,CAAA;AACA,eAAO;MAJD,CAbV;;;;;MAsBE,IAAM,CAAA,GAAE,CAAF,CAAA;AACR,YAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,CAAA,EAAA,aAAA,EAAA,GAAA,EAAA;QAAI,KAAA,+CAAA;;UACE,IAAG,GAAG,CAAC,QAAJ,CAAa,CAAb,CAAH;YACE,aAAA,GAAkB,IAAC,CAAA;YACnB,IAAC,CAAA,SAAD,GAAkB;YAClB,IAAC,CAAA,QAAD,GAAkB;YAClB,MAAA,GAAkB,CAAA,CAAA;YAClB,IAAG,IAAC,CAAA,QAAJ;cAAsB,kDAAkB,IAAC,CAAA,SAAnB,IAAkB,IAAxC;aAAA,MACK,IAAG,cAAH;cAAiB,4CAAkB,MAAlB,IAAkB,OAAnC;;YACL,IAAC,CAAA,SAAD,GAAkB,cAPpB;;QADF;QASA,CAAA,GAAI,eAAA,CAAgB,CAAhB;QACJ,IAAyB,CAAC,CAAC,MAAF,KAAY,CAArC;UAAA,IAAC,CAAA,SAAS,CAAC,IAAX,CAAgB,CAAhB,EAAA;;QACA,IAAC,CAAA,QAAD,GAAY;AACZ,eAAO;MAbH,CAtBR;;;MAsCE,KAAO,CAAA,CAAA;QACL,IAAC,CAAA,SAAD,GAAa;AACb,eAAO;MAFF;;IAvCT;;IACE,QAAC,CAAA,OAAD,CAAS,IAAT,EAAe;MAAE,SAAA,EAAW;IAAb,CAAf;;;uBAEA,SAAA,GAAgB;MAAE,OAAA,EAAS;IAAX;;;;gBAlClB;;;EA2EA,MAAM,CAAC,OAAP,GAAiB,CAAE,QAAF,EA3EjB;;;EA+EA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;IAAkC,CAAA,CAAA,CAAA,GAAA;aAChC;IADgC,CAAA,IAAlC;;AA/EA",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'CUPOFJOE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\n#...........................................................................................................\n@types                    = new ( require 'intertype' ).Intertype()\n{ isa\n  validate\n  type_of }               = @types.export()\n#...........................................................................................................\n{ jr }                    = CND\nMultimix                  = require 'multimix'\n\n#-----------------------------------------------------------------------------------------------------------\nremove_notgiven = ( list ) ->\n  return list.filter ( e ) -> e? ### mutating variant ###\n  # return ( e for e in list when e? ) ### non-mutating variant ###\n\n#-----------------------------------------------------------------------------------------------------------\nMAIN = @\nclass Cupofjoe extends Multimix\n  @include MAIN, { overwrite: false, }\n  # @extend MAIN, { overwrite: false, }\n  _defaults:      { flatten: false, }\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( settings = null) ->\n    super()\n    @settings       = { @_defaults..., settings..., }\n    @_crammed       = false\n    @clear()\n    return @\n\n  #---------------------------------------------------------------------------------------------------------\n  expand: ->\n    @collector  = @collector.flat Infinity if @settings.flatten\n    R           = @collector\n    @clear()\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n\n  #---------------------------------------------------------------------------------------------------------\n  cram: ( x... ) ->\n    for p, idx in x\n      if isa.function p\n        prv_collector   = @collector\n        @collector      = []\n        @_crammed       = false\n        rvalue          = p()\n        if @_crammed    then  x[ idx .. idx ] = @collector\n        else if rvalue? then  x[ idx .. idx ] = rvalue\n        @collector      = prv_collector\n    x = remove_notgiven x\n    @collector.push x unless x.length is 0\n    @_crammed = true\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  clear: ->\n    @collector = []\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\nmodule.exports = { Cupofjoe, }\n\n\n############################################################################################################\nif module is require.main then do =>\n  null\n\n"
  ]
}