{
  "version": 3,
  "file": "_types.js",
  "sourceRoot": "..",
  "sources": [
    "src/_types.coffee"
  ],
  "names": [],
  "mappings": ";AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB,EAhB5B;;;EAmBA,IAAC,CAAA,OAAD,CAAS,8BAAT,EACE;IAAA,KAAA,EACE;MAAA,gBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA1C;MACA,uBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,QAAL,CAAc,CAAC,CAAC,KAAhB;MAAT;IAD1C;EADF,CADF,EAnBA;;;EAyBA,IAAC,CAAA,OAAD,CAAS,kCAAT,EACE;IAAA,KAAA,EACE;MAAA,gBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA1C;MACA,oBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAC,CAAC,KAAb;MAAT;IAD1C;EADF,CADF,EAzBA;;;EAgCA,IAAC,CAAA,OAAD,CAAS,0BAAT,EAA8C,QAAA,CAAE,CAAF,CAAA;WAAS,CAAA,CAAA,IAAK,CAAL,IAAK,CAAL,IAAU,CAAV;EAAT,CAA9C;;EACA,IAAC,CAAA,OAAD,CAAS,4BAAT,EAA8C,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ,CAAF,CAAA,IAAqB,CAAE,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAAF;EAA9B,CAA9C;AAjCA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPEDREAMS/_TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'pipestreams_$window_settings',\n  tests:\n    \"x is an object\":                         ( x ) -> @isa.object x\n    \"x.width is a positive\":                  ( x ) -> @isa.positive x.width\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'pipestreams_$lookaround_settings',\n  tests:\n    \"x is an object\":                         ( x ) -> @isa.object x\n    \"x.delta is a count\":                     ( x ) -> @isa.count x.delta\n\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'positive_proper_fraction',          ( x ) -> 0 <= x <= 1\n@declare 'pipestreams_number_or_text',        ( x ) -> ( @isa.number x ) or ( @isa.text x )\n\n\n"
  ]
}