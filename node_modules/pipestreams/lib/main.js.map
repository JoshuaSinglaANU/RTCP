{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,QAAA,EAAA,WAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAf5B;;;EAiBA,KAAA,GAA4B,OAAA,CAAQ,UAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,CAAA,GAI4B,KAJ5B;;EAKA,QAAA,GAA4B,OAAA,CAAQ,UAAR;;EAItB;;IAAN,MAAA,YAAA,QAA0B,SAA1B,CAAA;;MAYE,WAAa,YAAc,IAAd,CAAA;;QAAE,IAAC,CAAA;MAAH;;IAZf;;;IAEE,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,UAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,WAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,QAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,yBAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,QAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,YAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,QAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,OAAR,CAAT;;IACA,WAAC,CAAA,OAAD,CAAS,OAAA,CAAQ,iBAAR,CAAT;;;;gBArCF;;;;;;;;EA+CA,MAAM,CAAC,OAAP,GAAkB,CAAA,GAAI,IAAI,WAAJ,CAAA;;EACtB,CAAC,CAAC,WAAF,GAAkB;AAhDlB",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = require './_types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\nMultimix                  = require 'multimix'\n\n\n#-----------------------------------------------------------------------------------------------------------\nclass Pipestreams extends Multimix\n  # @extend   object_with_class_properties\n  @include require './basics'\n  @include require './logging'\n  @include require './main'\n  @include require './njs-streams-and-files'\n  @include require './sort'\n  @include require './_symbols'\n  @include require './text'\n  @include require './tsv'\n  @include require './wye-tee-merge'\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( @settings = null ) ->\n    super()\n    # @specs    = {}\n    # @isa      = Multimix.get_keymethod_proxy @, isa\n    # # @validate = Multimix.get_keymethod_proxy @, validate\n    # declarations.declare_types.apply @\n\n############################################################################################################\nmodule.exports  = L = new Pipestreams()\nL.Pipestreams   = Pipestreams\n\n\n\n\n"
  ]
}