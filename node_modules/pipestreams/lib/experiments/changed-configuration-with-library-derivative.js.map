{
  "version": 3,
  "file": "changed-configuration-with-library-derivative.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/changed-configuration-with-library-derivative.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/DERIVATIVE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\neq                        = CND.equals\njr                        = JSON.stringify\n#...........................................................................................................\nPS_ORIGINAL               = require '../..'\n#...........................................................................................................\n{ jr\n  copy\n  is_empty\n  assign }                = CND\ncreate                    = Object.create\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\ndefer                     = setImmediate\n\n#-----------------------------------------------------------------------------------------------------------\nnew_pipestreams_library = ( end_symbol = null ) ->\n  R = PS_ORIGINAL._copy_library()\n  if end_symbol isnt null\n    R.symbols.end = end_symbol\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"pipeline using altered configuration\" ] = ( T, done ) ->\n  # through = require 'pull-through'\n  probes_and_matchers = [\n    [[false,[1,2,3,null,5]],[1,1,1,2,2,2,3,3,3,null,null,null,5,5,5],null]\n    [[false,[1,2,3,42,5]],[1,1,1,2,2,2,3,3,3],null]\n    # [[true,[1,2,3,null,5]],[1,1,1,2,2,2,3,3,3,null,null,null,5,5,5],null]\n    # [[false,[1,2,3,null,\"stop\",25,30]],[1,1,1,2,2,2,3,3,3,null,null,null],null]\n    # [[true,[1,2,3,null,\"stop\",25,30]],[1,1,1,2,2,2,3,3,3,null,null,null],null]\n    # [[false,[1,2,3,undefined,\"stop\",25,30]],[1,1,1,2,2,2,3,3,3,undefined,undefined,undefined,],null]\n    # [[true,[1,2,3,undefined,\"stop\",25,30]],[1,1,1,2,2,2,3,3,3,undefined,undefined,undefined,],null]\n    # [[false,[\"stop\",25,30]],[],null]\n    # [[true,[\"stop\",25,30]],[],null]\n    ]\n  #.........................................................................................................\n  my_end_sym                = 42\n  PS                        = new_pipestreams_library my_end_sym\n  debug PS.symbols\n  { $\n    $async }                = PS.export()\n  #.........................................................................................................\n  aborting_map = ( use_defer, mapper ) ->\n    react = ( handler, data ) ->\n      if data is 'stop' then  handler true\n      else                    handler null, mapper data\n    # a sink function: accept a source...\n    return ( read ) ->\n      # ...but return another source!\n      return ( abort, handler ) ->\n        read abort, ( error, data ) ->\n          # if the stream has ended, pass that on.\n          return handler error if error\n          if use_defer then  defer -> react handler, data\n          else                        react handler, data\n          return null\n        return null\n      return null\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      #.....................................................................................................\n      [ use_defer\n        values ]  = probe\n      source      = PS.new_value_source values\n      collector   = []\n      pipeline    = []\n      pipeline.push source\n      pipeline.push aborting_map use_defer, ( d ) -> info '22398-1', xrpr d; return d\n      pipeline.push PS.$map ( d ) -> info '22398-2', xrpr d; collector.push d; return d\n      pipeline.push PS.$map ( d ) -> info '22398-3', xrpr d; collector.push d; return d\n      pipeline.push PS.$map ( d ) -> info '22398-4', xrpr d; collector.push d; return d\n      pipeline.push PS.$drain ->\n        help '44998', xrpr collector\n        resolve collector\n      PS.pull pipeline...\n  #.........................................................................................................\n  done()\n  return null\n\n\n\n############################################################################################################\nunless module.parent?\n  null\n  test @\n  # test @[ \"demo through with null\" ]\n  # test @[ \"demo watch pipeline on abort 1\" ]\n  # test @[ \"demo watch pipeline on abort 2\" ]\n"
  ]
}