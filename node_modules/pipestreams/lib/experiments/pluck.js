// Generated by CoffeeScript 2.5.1
(function() {
  //-----------------------------------------------------------------------------------------------------------
  var pluck;

  pluck = function(x, key, fallback) {
    var R;
    R = x[key];
    if (R === void 0) {
      R = fallback;
    }
    delete x[key];
    return R;
  };

  //-----------------------------------------------------------------------------------------------------------
  this.$pluck = function(settings) {
    var as, keys, ref;
    if (settings == null) {
      throw new Error(`µ29303 need settings 'keys', got ${rpr(settings)}`);
    }
    ({keys} = settings);
    if (keys == null) {
      throw new Error(`µ30068 need settings 'keys', got ${rpr(settings)}`);
    }
    if (CND.isa_text(keys)) {
      keys = keys.split(/,\s*|\s+/);
    }
    if (!(keys.length > 0)) {
      throw new Error(`µ30833 need settings 'keys', got ${rpr(settings)}`);
    }
    as = (ref = settings['as']) != null ? ref : 'object';
    if (as !== 'list' && as !== 'object' && as !== 'pod') {
      throw new Error(`µ31598 expected 'list', 'object' or 'pod', got ${rpr(as)}`);
    }
    if (as === 'list') {
      return this.map((data) => {
        var i, key, len, results;
        results = [];
        for (i = 0, len = keys.length; i < len; i++) {
          key = keys[i];
          results.push(data[key]);
        }
        return results;
      });
    }
    return this.map((data) => {
      var Z, i, key, len;
      Z = {};
      for (i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        Z[key] = data[key];
      }
      return Z;
    });
  };

}).call(this);

//# sourceMappingURL=pluck.js.map
