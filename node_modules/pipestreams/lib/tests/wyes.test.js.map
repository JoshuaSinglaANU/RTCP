{
  "version": 3,
  "file": "wyes.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/wyes.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'PIPESTREAMS/TESTS/WYE'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nOS                        = require 'os'\ntest                      = require 'guy-test'\n#...........................................................................................................\nPS                        = require '../..'\n{ $\n  new_value_source\n  new_random_async_value_source\n  $async }                = PS.export()\n#...........................................................................................................\n{ jr\n  is_empty }              = CND\ndefer                     = setImmediate\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n\n# https://pull-stream.github.io/#pull-through\n\n# https://github.com/pull-stream/pull-cont\n# https://github.com/pull-stream/pull-defer\n# https://github.com/scrapjs/pull-imux\n# https://github.com/dominictarr/pull-flow (https://github.com/pull-stream/pull-stream/issues/4)\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"wye with duplex pair\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[false,false,false,[11,12,13],[21,22,23,24,25]],[11,21,12,22,13,23,24,25],null]\n    [[false,false,true, [11,12,13],[21,22,23,24,25]],[11,21,12,22,13,23,24,25],null]\n    [[false,true, false,[11,12,13],[21,22,23,24,25]],[11,21,12,22,13,23,24,25],null]\n    [[false,true, true, [11,12,13],[21,22,23,24,25]],[11,21,12,22,13,23,24,25],null]\n    [[true, false,false,[11,12,13],[21,22,23,24,25]],[21,22,23,24,25,11,12,13],null]\n    [[true, false,true, [11,12,13],[21,22,23,24,25]],[21,22,23,24,25,11,12,13],null]\n    [[true, true, false,[11,12,13],[21,22,23,24,25]],[21,22,23,24,25,11,12,13],null]\n    [[true, true, true, [11,12,13],[21,22,23,24,25]],[21,22,23,24,25,11,12,13],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve ) ->\n      $log                = PS.get_logger 'm', 'gold'\n      [ use_defer_1\n        use_defer_2\n        use_defer_3\n        a\n        b ]               = probe\n      source_a            = new_value_source a\n      source_b            = new_value_source b\n      collector           = []\n      clientline          = []\n      clientline.push source_a\n      clientline.push PS.$defer() if    use_defer_1\n      clientline.push PS.$wye source_b, use_defer_3\n      clientline.push PS.$defer() if    use_defer_2\n      clientline.push PS.$collect { collector, }\n      # clientline.push PS.$show()\n      clientline.push PS.$drain -> resolve collector\n      PS.pull clientline...\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"new_merged_source 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve, reject ) ->\n      R                   = []\n      drainer             = -> resolve R\n      source_1            = PS.new_push_source()\n      source_2            = PS.new_push_source()\n      #...................................................................................................\n      pipeline_1          = []\n      pipeline_1.push source_1\n      pipeline_1.push PS.$watch ( d ) -> whisper '10191-2', d\n      #...................................................................................................\n      pipeline_2          = []\n      pipeline_2.push source_2\n      pipeline_2.push PS.$watch ( d ) -> whisper '10191-3', d\n      #...................................................................................................\n      pipeline_3          = []\n      pipeline_3.push PS.new_merged_source ( PS.pull pipeline_1... ), ( PS.pull pipeline_2... )\n      pipeline_3.push PS.$watch ( d ) -> R.push d\n      pipeline_3.push PS.$watch ( d ) -> urge '10191-4', d\n      pipeline_3.push PS.$drain drainer\n      PS.pull pipeline_3...\n      max_idx = ( Math.max probe[ 0 ].length, probe[ 1 ].length ) - 1\n      for idx in [ 0 .. max_idx ]\n        source_1.send x if ( x = probe[ 0 ][ idx ] )?\n        source_2.send x if ( x = probe[ 1 ][ idx ] )?\n      source_1.end()\n      source_2.end()\n    done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nnew_filtered_bysink = ( name, collector, filter ) ->\n  R = []\n  R.push PS.$filter filter\n  R.push PS.$watch ( d ) -> collector.push d\n  # R.push PS.$watch ( d ) -> whisper '10191', '------------>', name, xrpr d\n  R.push PS.$drain()\n  return PS.pull R...\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 1\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[[1,2,3,4,5,6],[\"a\",\"b\",\"c\"],[]],null]\n    [[[\"a\",null,\"b\",\"c\",true],[null,1,2,3,4,5,6,null,undefined,Infinity]],[ [ 1, 2, 3, 4, 5, 6 ], [ 'a', 'b', 'c' ], [ null, null, true, null, undefined, Infinity ] ],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> new Promise ( resolve, reject ) ->\n      numbers             = []\n      texts               = []\n      others              = []\n      R                   = [ numbers, texts, others, ]\n      source_1            = PS.new_push_source()\n      source_2            = PS.new_push_source()\n      #...................................................................................................\n      bysource            = []\n      bysource.push source_2\n      # bysource.push PS.$watch ( d ) -> whisper '10191-5', 'bysource', jr d\n      # bysource.push PS.$defer()\n      bysource            = PS.pull bysource...\n      #...................................................................................................\n      mainstream          = []\n      mainstream.push source_1\n      # mainstream.push PS.$defer()\n      mainstream.push PS.$wye bysource\n      # mainstream.push PS.$watch ( d ) -> whisper '10191-6', 'confluence', jr d\n      mainstream.push PS.$tee new_filtered_bysink 'number', numbers,  ( d ) -> CND.isa_number d\n      mainstream.push PS.$tee new_filtered_bysink 'text',   texts,    ( d ) -> CND.isa_text d\n      mainstream.push PS.$tee new_filtered_bysink 'other',  others,   ( d ) -> ( not CND.isa_number d ) and ( not CND.isa_text d )\n      mainstream.push PS.$drain ->\n        echo xrpr R\n        resolve R\n      PS.pull mainstream...\n      #...................................................................................................\n      max_idx = ( Math.max probe[ 0 ].length, probe[ 1 ].length ) - 1\n      for idx in [ 0 .. max_idx ]\n        source_1.send probe[ 0 ][ idx ] if idx < probe[ 0 ].length\n        source_2.send probe[ 1 ][ idx ] if idx < probe[ 1 ].length\n      source_1.end()\n      source_2.end()\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 2\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[true,true,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    [[false,true,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    [[false,false,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    [[true,false,[\"a\",\"b\",\"c\"],[1,2,3,4,5,6]],[\"a\",1,\"b\",2,\"c\",3,4,5,6],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    matcher = matcher.sort()\n    await T.perform probe, matcher, error, ->\n      return new Promise ( resolve, reject ) ->\n        [ defer_mainstream\n          defer_bystream\n          mainstream_values\n          bystream_values ] = probe\n        R                   = []\n        drainer             = -> R = R.sort(); resolve R\n        mainsource          = PS.new_push_source()\n        bysource            = PS.new_push_source()\n        #...................................................................................................\n        bystream            = []\n        bystream.push bysource\n        bystream.push PS.$watch ( d ) -> whisper '10192-1', 'bysource', jr d\n        bystream.push PS.$defer() if defer_bystream\n        bystream.push PS.$watch ( d ) -> whisper '10192-1a', 'bysource', jr d\n        bystream = PS.pull bystream...\n        #...................................................................................................\n        mainstream          = []\n        mainstream.push mainsource\n        mainstream.push $ { last: 'last' }, ( d, send ) -> urge '10192-2', 'mainstream', d; send d unless d is 'last'\n        mainstream.push PS.$defer() if defer_mainstream\n        mainstream.push PS.$watch ( d ) -> whisper '10192-3', 'mainstream', jr d\n        mainstream.push PS.$wye bystream\n        mainstream.push PS.$watch ( d ) -> R.push d\n        mainstream.push PS.$watch ( d ) -> urge CND.white '10192-4', 'confluence', jr d\n        mainstream.push PS.$drain drainer\n        PS.pull mainstream...\n        max_idx = ( Math.max mainstream_values.length, bystream_values.length ) - 1\n        for idx in [ 0 .. max_idx ]\n          mainsource.send x if ( x = mainstream_values[ idx ] )?\n          bysource.send   x if ( x = bystream_values[   idx ] )?\n        mainsource.end()\n        bysource.end()\n        return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tee with filter\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[10,11,12,13,14,15,16,17,18,19,20],{\"odd_numbers\":[11,13,15,17,19],\"all_numbers\":[10,11,12,13,14,15,16,17,18,19,20]},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    #.......................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      is_odd      = ( d ) -> ( d % 2 ) isnt 0\n      odd_numbers = []\n      all_numbers = []\n      R           = { odd_numbers, all_numbers, }\n      #.....................................................................................................\n      byline      = []\n      mainline    = []\n      #.....................................................................................................\n      byline.push PS.$show title: 'bystream'\n      byline.push PS.$watch ( d ) -> odd_numbers.push d\n      byline.push PS.$drain()\n      bystream  = PS.pull byline...\n      #.....................................................................................................\n      mainline.push new_value_source probe\n      mainline.push PS.$tee is_odd, bystream\n      mainline.push PS.$show title: 'mainstream'\n      mainline.push PS.$watch ( d ) -> all_numbers.push d\n      mainline.push PS.$drain ->\n        help 'ok'\n        resolve R\n      PS.pull mainline...\n      #.....................................................................................................\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"bifurcate\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[10,11,12,13,14,15,16,17,18,19,20],{\"odd_numbers\":[11,13,15,17,19],\"even_numbers\":[10,12,14,16,18,20]},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    #.......................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      is_even       = ( d ) -> ( d % 2 ) is 0\n      odd_numbers   = []\n      even_numbers  = []\n      R             = { odd_numbers, even_numbers, }\n      #.....................................................................................................\n      byline        = []\n      mainline      = []\n      #.....................................................................................................\n      byline.push PS.$show title: 'bystream'\n      byline.push PS.$watch ( d ) -> even_numbers.push d\n      byline.push PS.$drain()\n      bystream  = PS.pull byline...\n      #.....................................................................................................\n      mainline.push new_value_source probe\n      mainline.push PS.$bifurcate is_even, bystream\n      mainline.push PS.$show title: 'mainstream'\n      mainline.push PS.$watch ( d ) -> odd_numbers.push d\n      mainline.push PS.$drain ->\n        help 'ok'\n        resolve R\n      PS.pull mainline...\n      #.....................................................................................................\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"wye from asnyc random sources\" ] = ( T, done ) ->\n  ### A mainstream and a bystream are created from lists of values using\n  `new_random_async_value_source()`. Values from both streams are marked up for their respective source.\n  After being funnelled together using `PS.$wye()`, the result is a POD whose keys are the source names\n  and whose values are lists of the values in the order they were seen. The expected result is that the\n  ordering of each stream is preserved, no values get lost, and that relative ordering of values in the\n  mainstream and the bystream is arbitrary. ###\n  probes_and_matchers = [\n    # [[[3,4,5,6,7,8],[\"just\",\"a\",\"few\",\"words\"]],{\"bystream\":[3,4,5,6,7,8],\"mainstream\":[\"just\",\"a\",\"few\",\"words\"]},null]\n    # [[[3,4],[9,10,11,true]],{\"bystream\":[3,4],\"mainstream\":[9,10,11,true]},null]\n    [[[3,4,{\"foo\":\"bar\"}],[false,9,10,11,true]],{\"bystream\":[3,4,{\"foo\":\"bar\"}],\"mainstream\":[false,9,10,11,true]},null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    R = { bystream: [], mainstream: [], }\n    #.......................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      byline    = []\n      byline.push new_random_async_value_source 0.1, probe[ 0 ]\n      byline.push $ ( d, send ) -> send [ 'bystream', d, ]\n      # byline.push PS.$watch ( d ) -> debug '37333', 'bystream', xrpr d\n      # byline.push $ { first: 'first', last: 'last', }, ( d, send ) ->\n      #   if d in [ 'first', 'last', ] then warn    'bystream', xrpr d\n      #   else                              whisper 'bystream', xrpr d\n      #.....................................................................................................\n      mainline = []\n      mainline.push new_random_async_value_source probe[ 1 ]\n      mainline.push $ ( d, send ) -> send [ 'mainstream', d, ]\n      mainline.push PS.$wye PS.pull byline...\n      # mainline.push $ { first: 'first', last: 'last', }, ( d, send ) ->\n      #   if d in [ 'first', 'last', ] then warn    'mainstream', xrpr d\n      #   else                              whisper 'mainstream', xrpr d\n      mainline.push PS.$watch ( d ) ->\n        debug '37333', xrpr d\n        R[ d[ 0 ] ].push d[ 1 ]\n      mainline.push PS.$drain ->\n        echo 'result:   ', xrpr R\n        echo 'matcher:  ', xrpr matcher\n        help 'ok'\n        resolve R\n      PS.pull mainline...\n      #.....................................................................................................\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 3\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [{\"start_value\":0.5,\"delta\":0.01,},[0.5,0.25,0.375,0.3125,0.34375,0.328125],null]\n    ]\n  end_sym = Symbol 'end'\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      R                   = []\n      drainer             = -> debug '10191-1', \"mainstream ended\"; resolve R\n      mainsource          = PS.new_push_source()\n      bysource            = PS.new_push_source()\n      #...................................................................................................\n      bystream            = []\n      bystream.push bysource\n      bystream.push $ { last: end_sym,}, ( d, send ) ->\n        if d is end_sym\n          debug '22092-1', \"bystream ended\"\n        else\n          send d\n        return null\n      bystream.push PS.$watch ( d ) -> whisper '10191-1', 'bysource', jr d\n      bystream = PS.pull bystream...\n      #...................................................................................................\n      mainstream          = []\n      mainstream.push mainsource\n      mainstream.push PS.$wye bystream\n      mainstream.push PS.$async ( d, send, done ) ->\n        send d\n        if ( 1 / 3 - probe.delta ) <= d <= ( 1 / 3 + probe.delta )\n          defer ->\n            # send end_sym\n            mainsource.end()\n            bysource.end()\n            done()\n        else\n          defer ->\n            bysource.send ( 1 - d ) / 2\n            done()\n        return null\n      mainstream.push PS.$defer()\n      mainstream.push PS.$watch ( d ) -> urge CND.white '10191-4', 'confluence', jr d\n      mainstream.push PS.$watch ( d ) -> R.push d\n      mainstream.push PS.$drain drainer\n      PS.pull mainstream...\n      mainsource.send probe.start_value\n      return null\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 4\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[true,true,[10,11,12,13,14,15],[20,21,22,23,24,25]],[10,11,12,13,14,15,20,21,22,23,24,25],null]\n    [[false,false,[10,11,12,13,14,15],[20,21,22,23,24,25]],[10,11,12,13,14,15,20,21,22,23,24,25],null]\n    [[false,true,[10,11,12,13,14,15],[20,21,22,23,24,25]],[10,11,12,13,14,15,20,21,22,23,24,25],null]\n    # [[true,false,[10,11,12,13,14,15],[20,21,22,23,24,25]],[10,11,12,13,14,15,20,21,22,23,24,25],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    #.......................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ use_bystream_vs\n        use_mainstream_vs\n        byline_values\n        mainline_values ] = probe\n      R                   = []\n      #.....................................................................................................\n      byline              = []\n      mainline            = []\n      #.....................................................................................................\n      byline.push ( if use_bystream_vs then new_value_source else new_random_async_value_source ) byline_values\n      byline.push PS.$show title: 'bystream'\n      bystream            = PS.pull byline...\n      #.....................................................................................................\n      mainline.push ( if use_mainstream_vs then new_value_source else new_random_async_value_source ) mainline_values\n      mainline.push PS.$show title: 'mainstream'\n      # mainline.push PS.$defer()\n      mainline.push PS.$wye bystream\n      mainline.push PS.$show title: 'confluence'\n      mainline.push PS.$collect { collector: R, }\n      mainline.push PS.$drain ->\n        help 'ok'\n        resolve R.sort()\n      mainstream          = PS.pull mainline...\n      #.....................................................................................................\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"$wye 5\" ] = ( T, done ) ->\n  ### This test uses a wye to implement a looping transform. The transform's\n  byline starts with a wye whose refillable source is used to implement the\n  loop. Observe that a wye cannot come first in  pipeline, so we put a `$pass()`\n  transform first to satisfy that requirement. The transform will accept texts\n  and pass them with as many stars as needed, one at a time, until the text's\n  length is at least 5 characters. Hence, each incoming text may loop for a\n  number of times: a 4-character text gets an additional `*` and doesn't loop at\n  all, a single-character text gets one star and is the sent back into the\n  wye,so it will loop 3 times before having grown to 5 characters. These\n  different looping times mean that a new text may enter the loop before a\n  previous data item has finished looping; to prevent that, a synchronizing\n  stage has been implemented with a pausable transform and two gates; these are\n  situated in the mainline.\n\n  For unknown reasons, the construct does not work with\n  `new_random_async_value_source()`.\n  ###\n  probes_and_matchers = [\n    [[true,false,[\"a\",\"fine\",\"day\"]],[\"a****\",\"fine*\",\"day**\"],null]\n    [[true,true,[\"a\",\"fine\",\"day\"]],[\"a****\",\"fine*\",\"day**\"],null]\n    # [[false,false,[\"a\",\"fine\",\"day\"]],[\"a****\",\"fine*\",\"day**\"],null]\n    # [[false,true,[\"a\",\"fine\",\"day\"]],[\"a****\",\"fine*\",\"day**\"],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    #.......................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ use_mainstream_vs\n        use_defer_1\n        mainline_values ] = probe\n      R                   = []\n      #.....................................................................................................\n      $process = ->\n        byline      = []\n        refillable  = []\n        byline.push PS.$pass()\n        # byline.push PS.$defer()\n        byline.push PS.$wye PS.new_refillable_source refillable, { repeat: 3, show: true, }\n        byline.push PS.$watch ( d ) -> info 'bystream', xrpr d\n        byline.push $ ( d, send ) ->\n          if d.length < 5 then refillable.push d + '*'\n          else send d\n          return null\n        return PS.pull byline...\n      #.....................................................................................................\n      pausable = PS.new_pausable()\n      mainline = []\n      if      use_mainstream_vs then  mainline.push new_value_source               mainline_values\n      else                            mainline.push new_random_async_value_source  mainline_values\n      mainline.push PS.$show title: 'mainstream'\n      mainline.push PS.$defer() if use_defer_1\n      mainline.push pausable\n      mainline.push PS.$watch ( d ) -> pausable.pause(); debug '37787', 'pause'\n      mainline.push PS.$watch ( d ) -> urge 'mainstream 1', xrpr d\n      mainline.push $process()\n      mainline.push PS.$watch ( d ) -> pausable.resume(); debug '37787', 'resume'\n      mainline.push PS.$watch ( d ) -> urge 'mainstream 2', xrpr d\n      mainline.push PS.$collect { collector: R, }\n      mainline.push PS.$drain ->\n        help 'ok'\n        resolve R\n      mainstream          = PS.pull mainline...\n      #.....................................................................................................\n      return null\n  #.........................................................................................................\n  done()\n  return null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"circular stream with wye and refillable\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [[true,true,true,[1,]],[4],null]\n    [[true,true,true,[2]],[2],null]\n    [[true,true,true,[3]],[10],null]\n    [[true,true,true,[1,2,3]],[2,4,10],null]\n    [[true,true,true,[10,11,12,13,14,15]],[10,12,14,34,40,46],null]\n    [[true,false,false,[1,]],[4],null]\n    [[true,false,false,[2]],[2],null]\n    [[true,false,false,[3]],[10],null]\n    [[true,false,false,[1,2,3]],[2,4,10],null]\n    [[true,false,false,[10,11,12,13,14,15]],[10,12,14,34,40,46],null]\n    [[false,true,false,[1]],[4],null]\n    [[false,true,false,[2]],[2],null]\n    [[false,true,false,[3]],[10],null]\n    [[false,true,false,[1,2,3]],[2,4,10],null]\n    [[false,true,false,[10,11,12,13,14,15]],[10,12,14,34,40,46],null]\n    [[false,false,false,[1]],[4],null]\n    [[false,false,false,[2]],[2],null]\n    [[false,false,false,[3]],[10],null]\n    [[false,false,false,[1,2,3]],[2,4,10],null]\n    [[false,false,false,[10,11,12,13,14,15]],[10,12,14,34,40,46],null]\n    [[false,false,true,[1]],[4],null]\n    [[false,false,true,[2]],[2],null]\n    [[false,false,true,[3]],[10],null]\n    [[false,false,true,[1,2,3]],[2,4,10],null]\n    [[false,false,true,[10,11,12,13,14,15]],[10,12,14,34,40,46],null]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    #.......................................................................................................\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ use_defer_1\n        use_defer_2\n        use_defer_3\n        values ]        = probe\n      collector         = []\n      mainline          = []\n      byline            = []\n      refillable        = []\n      refillable_source = PS.new_refillable_source refillable, { repeat: 5, show: false, }\n      #.........................................................................................................\n      # pipe the second duplex stream back to itself.\n      byline.push refillable_source\n      # byline.push client\n      byline.push PS.$defer() if use_defer_3\n      byline.push $ ( d, send ) -> send d * 3 + 1\n      bystream = PS.pull byline...\n      #.........................................................................................................\n      mainline.push new_value_source values\n      mainline.push PS.$defer() if use_defer_1\n      mainline.push PS.$wye bystream, defer: true\n      mainline.push PS.$defer() if use_defer_2\n      mainline.push $ ( d, send ) ->\n        if d %% 2 isnt 0 then refillable.push d\n        else send d\n      mainline.push PS.$collect { collector, }\n      # mainline.push client\n      mainline.push PS.$drain =>\n        # echo xrpr collector\n        resolve collector\n      PS.pull mainline...\n  #.........................................................................................................\n  done()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @, { timeout: 5000, }\n  # test @[ \"new_merged_source 1\"             ]\n  # test @[ \"$wye 1\"                          ]\n  # test @[ \"$wye 2\"                          ]\n  # test @[ \"tee with filter\"                 ]\n  # test @[ \"bifurcate\"                       ]\n  # test @[ \"wye from asnyc random sources\"   ]\n  # test @[ \"$wye 3\"                          ]\n  # test @[ \"$wye 4\"                          ]\n  # test @[ \"$wye 5\"                          ]\n  # test @[ \"circular stream with wye and refillable\" ]\n\n\n"
  ]
}