{
  "version": 3,
  "file": "exception-handler.js",
  "sourceRoot": "..",
  "sources": [
    "src/exception-handler.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\n############################################################################################################\n############################################################################################################\n### see https://medium.com/@nodejs/source-maps-in-node-js-482872b56116\n############################################################################################################\n############################################################################################################\n############################################################################################################\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'nodexh'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\nstackman                  = ( require 'stackman' )()\nFS                        = require 'fs'\nPATH                      = require 'path'\n{ isa_text\n  red\n  green\n  steel\n  grey\n  cyan\n  bold\n  gold\n  reverse\n  white\n  yellow\n  reverse }               = CND\n\n\n#-----------------------------------------------------------------------------------------------------------\nget_context = ( path, linenr ) ->\n  ### TAINT use stackman.sourceContexts() instead ###\n  try\n    lines     = ( FS.readFileSync path, { encoding: 'utf-8' } ).split '\\n'\n    delta     = 1\n    first_idx = Math.max 0, linenr - 1 - delta\n    last_idx  = Math.min lines.length - 1, linenr - 1 + delta\n    R         = []\n    for line, idx in lines[ first_idx .. last_idx ]\n      this_linenr = first_idx + idx + 1\n      lnr = ( this_linenr.toString().padStart 4 ) + '│ '\n      if this_linenr is linenr  then  R.push  \"#{grey lnr}#{cyan line}\"\n      else                            R.push  \"#{grey lnr}#{grey line}\"\n    # R = R.join '\\n'\n  catch error\n    throw error unless error.code is 'ENOENT'\n    return [ ( grey './.' ), ]\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nshow_error_with_source_context = ( error ) ->\n  stackman.callsites error, ( error, callsites ) ->\n    throw error if error?\n    callsites.forEach ( callsite ) ->\n      unless isa_text ( path = callsite.getFileName() )\n        alert grey '—'.repeat 108\n        return null\n      relpath   = PATH.relative process.cwd(), path\n      linenr    = callsite.getLineNumber()\n      if path.startsWith 'internal/'\n        alert grey \"#{relpath} ##{linenr}\"\n        return null\n      alert()\n      # alert steel bold reverse ( \"#{relpath} ##{linenr}:\" ).padEnd 108\n      alert gold ( \"#{bold relpath} ##{linenr}:\" ).padEnd 108\n      source = get_context path, linenr\n      alert line for line in source\n      return null\n    return null\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@exit_handler = ( exception ) ->\n  print               = alert\n  message             = ' EXCEPTION: ' + ( exception?.message ? \"an unrecoverable condition occurred\" )\n  if exception?.where?\n    message += '\\n--------------------\\n' + exception.where + '\\n--------------------'\n  [ head, tail..., ]  = message.split '\\n'\n  print reverse ' ' + head + ' '\n  warn line for line in tail\n  if exception?.stack?\n    show_error_with_source_context exception\n  else\n    whisper exception?.stack ? \"(exception undefined, no stack)\"\n  process.exitCode = 1\n@exit_handler = @exit_handler.bind @\n\n\n############################################################################################################\nunless global[ Symbol.for 'cnd-exception-handler' ]?\n  global[ Symbol.for 'cnd-exception-handler' ] = true\n  if process.type is 'renderer'\n    window.addEventListener 'error', ( event ) =>\n      # event.preventDefault()\n      message = ( event.error?.message ? \"(error without message)\" ) + '\\n' + ( event.error?.stack ? '' )[ ... 500 ]\n      OPS.log message\n      # @exit_handler event.error\n      OPS.open_devtools()\n      return true\n\n    window.addEventListener 'unhandledrejection', ( event ) =>\n      # event.preventDefault()\n      message = ( event.reason?.message ? \"(error without message)\" ) + '\\n' + ( event.reason?.stack ? '' )[ ... 500 ]\n      OPS.log message\n      # @exit_handler event.reason\n      OPS.open_devtools()\n      return true\n  else\n    process.on 'uncaughtException',  @exit_handler\n    process.on 'unhandledRejection', @exit_handler\n\n"
  ]
}