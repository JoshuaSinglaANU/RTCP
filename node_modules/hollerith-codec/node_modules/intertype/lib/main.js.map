{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nMultimix                  = require 'multimix'\n#...........................................................................................................\nHELPERS                   = require './helpers'\n{ assign\n  jr\n  rpr\n  xrpr\n  get_rprs_of_tprs\n  js_type_of }            = HELPERS\n#...........................................................................................................\ndeclarations              = require './declarations'\nsad                       = ( require './checks' ).sad\njk_equals                 = require '../deps/jkroso-equals'\n\n\n#-----------------------------------------------------------------------------------------------------------\nisa                 = ( type, xP... ) -> @_satisfies_all_aspects  type, xP...\nisa_list_of         = ( type, xP... ) -> @isa.list_of             type, xP...\nisa_object_of       = ( type, xP... ) -> @isa.object_of           type, xP...\nvalidate_list_of    = ( type, xP... ) -> @validate.list_of        type, xP...\nvalidate_object_of  = ( type, xP... ) -> @validate.object_of      type, xP...\nisa_optional        = ( type, xP... ) -> ( not xP[ 0 ]? ) or @_satisfies_all_aspects   type, xP...\nvalidate_optional   = ( type, xP... ) -> ( not xP[ 0 ]? ) or @validate                 type, xP...\n\n#-----------------------------------------------------------------------------------------------------------\ncast = ( type_a, type_b, x, xP... ) ->\n  @validate type_a, x, xP...\n  return x if type_a is type_b\n  return x if @isa type_b, x, xP...\n  if ( casts = @specs[ type_a ].casts )?\n    return ( converter.call @, x, xP... ) if ( converter = casts[ type_b ] )?\n  return \"#{x}\" if type_b is 'text' ### TAINT use better method like util.inspect ###\n  throw new Error \"^intertype/cast@1234^ unable to cast a #{type_a} as #{type_b}\"\n\n#-----------------------------------------------------------------------------------------------------------\ncheck = ( type, x, xP... ) ->\n  if @specs[ type ]?\n    return if ( @isa type, x, xP... ) then true else sad\n  throw new Error \"^intertype/check@1345^ unknown type or check #{rpr type}\" unless ( check = @checks[ type ] )?\n  return try check.call @, x, xP... catch error then error\n\n#-----------------------------------------------------------------------------------------------------------\nvalidate = ( type, xP... ) ->\n  return true unless ( aspect = @_get_unsatisfied_aspect type, xP... )?\n  [ x, P..., ] = xP\n  { rpr_of_tprs, srpr_of_tprs, } = get_rprs_of_tprs P\n  message = if aspect is 'main'\n    \"^intertype/validate@1456^ not a valid #{type}: #{xrpr x}#{srpr_of_tprs}\"\n  else\n    \"^intertype/validate@1567^ not a valid #{type} (violates #{rpr aspect}): #{xrpr x}#{srpr_of_tprs}\"\n  throw new Error message\n\n\n\n\n#===========================================================================================================\nclass @Intertype extends Multimix\n  # @extend   object_with_class_properties\n  @include require './sizing'\n  @include require './declaring'\n  @include require './checks'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( target = null ) ->\n    super()\n    #.......................................................................................................\n    ### TAINT bug in MultiMix, should be possible to declare methods in class, not the constructor,\n    and still get a bound version with `export()`; declaring them here FTTB ###\n    #.......................................................................................................\n    @sad                = sad\n    @specs              = {}\n    @checks             = {}\n    @isa                = Multimix.get_keymethod_proxy @, isa\n    @isa_optional       = Multimix.get_keymethod_proxy @, isa_optional\n    @isa_list_of        = Multimix.get_keymethod_proxy @, isa_list_of\n    @isa_object_of      = Multimix.get_keymethod_proxy @, isa_object_of\n    @cast               = Multimix.get_keymethod_proxy @, cast\n    @validate           = Multimix.get_keymethod_proxy @, validate\n    @validate_optional  = Multimix.get_keymethod_proxy @, validate_optional\n    @validate_list_of   = Multimix.get_keymethod_proxy @, validate_list_of\n    @validate_object_of = Multimix.get_keymethod_proxy @, validate_object_of\n    @check              = Multimix.get_keymethod_proxy @, check\n    @nowait             = ( x ) -> @validate.immediate x; return x\n    @_helpers           = HELPERS\n    declarations.declare_types.apply @\n    declarations.declare_checks.apply @\n    @export target if target?\n\n  #---------------------------------------------------------------------------------------------------------\n  equals: ( a, P... ) ->\n    if ( arity = arguments.length ) < 2\n      throw new Error \"^intertype/equals@3489^ expected at least 2 arguments, got #{arity}\"\n    type_of_a = @type_of a\n    for b in P\n      return false unless type_of_a is @type_of b\n      ### TAINT this call involves its own typechecking code and thus may mysteriously fail ###\n      return false unless jk_equals a, b\n    return true\n\n\n"
  ]
}